/*
Hava

Hava API

API version: 1.1.3
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// ProjectsUpdateRequest struct for ProjectsUpdateRequest
type ProjectsUpdateRequest struct {
	// The updated name for the project
	Name *string `json:"name,omitempty"`
	// The updated description of the project
	Description *string `json:"description,omitempty"`
}

// NewProjectsUpdateRequest instantiates a new ProjectsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsUpdateRequest() *ProjectsUpdateRequest {
	this := ProjectsUpdateRequest{}
	return &this
}

// NewProjectsUpdateRequestWithDefaults instantiates a new ProjectsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsUpdateRequestWithDefaults() *ProjectsUpdateRequest {
	this := ProjectsUpdateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectsUpdateRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectsUpdateRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectsUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectsUpdateRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectsUpdateRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectsUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

func (o ProjectsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsUpdateRequest struct {
	value *ProjectsUpdateRequest
	isSet bool
}

func (v NullableProjectsUpdateRequest) Get() *ProjectsUpdateRequest {
	return v.value
}

func (v *NullableProjectsUpdateRequest) Set(val *ProjectsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsUpdateRequest(val *ProjectsUpdateRequest) *NullableProjectsUpdateRequest {
	return &NullableProjectsUpdateRequest{value: val, isSet: true}
}

func (v NullableProjectsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

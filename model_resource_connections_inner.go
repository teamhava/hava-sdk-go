/*
Hava

Hava API

API version: 1.1.3
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// ResourceConnectionsInner struct for ResourceConnectionsInner
type ResourceConnectionsInner struct {
	// The unique ID of the connection
	Id *string `json:"id,omitempty"`
	// The unique ID of the resource this connection is from
	ResourceId *string `json:"resource_id,omitempty"`
	// The unique ID of the resource this connection is to
	RemoteResourceId *string `json:"remote_resource_id,omitempty"`
	// The type of the resource this connection is to
	RemoteResourceType *string `json:"remote_resource_type,omitempty"`
	// Additional data related to this connection
	Data map[string]interface{} `json:"data,omitempty"`
}

// NewResourceConnectionsInner instantiates a new ResourceConnectionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceConnectionsInner() *ResourceConnectionsInner {
	this := ResourceConnectionsInner{}
	return &this
}

// NewResourceConnectionsInnerWithDefaults instantiates a new ResourceConnectionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceConnectionsInnerWithDefaults() *ResourceConnectionsInner {
	this := ResourceConnectionsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceConnectionsInner) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionsInner) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceConnectionsInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResourceConnectionsInner) SetId(v string) {
	o.Id = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ResourceConnectionsInner) GetResourceId() string {
	if o == nil || isNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionsInner) GetResourceIdOk() (*string, bool) {
	if o == nil || isNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ResourceConnectionsInner) HasResourceId() bool {
	if o != nil && !isNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ResourceConnectionsInner) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetRemoteResourceId returns the RemoteResourceId field value if set, zero value otherwise.
func (o *ResourceConnectionsInner) GetRemoteResourceId() string {
	if o == nil || isNil(o.RemoteResourceId) {
		var ret string
		return ret
	}
	return *o.RemoteResourceId
}

// GetRemoteResourceIdOk returns a tuple with the RemoteResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionsInner) GetRemoteResourceIdOk() (*string, bool) {
	if o == nil || isNil(o.RemoteResourceId) {
		return nil, false
	}
	return o.RemoteResourceId, true
}

// HasRemoteResourceId returns a boolean if a field has been set.
func (o *ResourceConnectionsInner) HasRemoteResourceId() bool {
	if o != nil && !isNil(o.RemoteResourceId) {
		return true
	}

	return false
}

// SetRemoteResourceId gets a reference to the given string and assigns it to the RemoteResourceId field.
func (o *ResourceConnectionsInner) SetRemoteResourceId(v string) {
	o.RemoteResourceId = &v
}

// GetRemoteResourceType returns the RemoteResourceType field value if set, zero value otherwise.
func (o *ResourceConnectionsInner) GetRemoteResourceType() string {
	if o == nil || isNil(o.RemoteResourceType) {
		var ret string
		return ret
	}
	return *o.RemoteResourceType
}

// GetRemoteResourceTypeOk returns a tuple with the RemoteResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionsInner) GetRemoteResourceTypeOk() (*string, bool) {
	if o == nil || isNil(o.RemoteResourceType) {
		return nil, false
	}
	return o.RemoteResourceType, true
}

// HasRemoteResourceType returns a boolean if a field has been set.
func (o *ResourceConnectionsInner) HasRemoteResourceType() bool {
	if o != nil && !isNil(o.RemoteResourceType) {
		return true
	}

	return false
}

// SetRemoteResourceType gets a reference to the given string and assigns it to the RemoteResourceType field.
func (o *ResourceConnectionsInner) SetRemoteResourceType(v string) {
	o.RemoteResourceType = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ResourceConnectionsInner) GetData() map[string]interface{} {
	if o == nil || isNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionsInner) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ResourceConnectionsInner) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ResourceConnectionsInner) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o ResourceConnectionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ResourceId) {
		toSerialize["resource_id"] = o.ResourceId
	}
	if !isNil(o.RemoteResourceId) {
		toSerialize["remote_resource_id"] = o.RemoteResourceId
	}
	if !isNil(o.RemoteResourceType) {
		toSerialize["remote_resource_type"] = o.RemoteResourceType
	}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableResourceConnectionsInner struct {
	value *ResourceConnectionsInner
	isSet bool
}

func (v NullableResourceConnectionsInner) Get() *ResourceConnectionsInner {
	return v.value
}

func (v *NullableResourceConnectionsInner) Set(val *ResourceConnectionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConnectionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConnectionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConnectionsInner(val *ResourceConnectionsInner) *NullableResourceConnectionsInner {
	return &NullableResourceConnectionsInner{value: val, isSet: true}
}

func (v NullableResourceConnectionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConnectionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

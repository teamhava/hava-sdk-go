/*
Hava

Hava API

API version: 1.1.1
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// AccountIdTeamsBody struct for AccountIdTeamsBody
type AccountIdTeamsBody struct {
	// The name of the team to create
	Name *string `json:"name,omitempty"`
	// An array of roles to assign the users in this team
	Roles []string `json:"roles,omitempty"`
}

// NewAccountIdTeamsBody instantiates a new AccountIdTeamsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIdTeamsBody() *AccountIdTeamsBody {
	this := AccountIdTeamsBody{}
	return &this
}

// NewAccountIdTeamsBodyWithDefaults instantiates a new AccountIdTeamsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIdTeamsBodyWithDefaults() *AccountIdTeamsBody {
	this := AccountIdTeamsBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccountIdTeamsBody) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdTeamsBody) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccountIdTeamsBody) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccountIdTeamsBody) SetName(v string) {
	o.Name = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AccountIdTeamsBody) GetRoles() []string {
	if o == nil || isNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdTeamsBody) GetRolesOk() ([]string, bool) {
	if o == nil || isNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AccountIdTeamsBody) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *AccountIdTeamsBody) SetRoles(v []string) {
	o.Roles = v
}

func (o AccountIdTeamsBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableAccountIdTeamsBody struct {
	value *AccountIdTeamsBody
	isSet bool
}

func (v NullableAccountIdTeamsBody) Get() *AccountIdTeamsBody {
	return v.value
}

func (v *NullableAccountIdTeamsBody) Set(val *AccountIdTeamsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIdTeamsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIdTeamsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIdTeamsBody(val *AccountIdTeamsBody) *NullableAccountIdTeamsBody {
	return &NullableAccountIdTeamsBody{value: val, isSet: true}
}

func (v NullableAccountIdTeamsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIdTeamsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Hava

Hava API

API version: 1.1.1
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// SourcesAWSCAR The parameters required to create an AWS Cross Account Role Source
type SourcesAWSCAR struct {
	// The name for this source
	Name *string `json:"name,omitempty"`
	// Must be set to AWS::CrossAccountRole
	Type *string `json:"type,omitempty"`
	// The external ID used to uniquely identify access on the AWS side. This value must be set to an MD5 of your account ID. You can find this value in the 'Add Environment' prompt in Hava.
	ExternalId *string `json:"external_id,omitempty"`
	// The ARN of the role Hava is to assume in your account to import resources
	RoleArn *string `json:"role_arn,omitempty"`
}

// NewSourcesAWSCAR instantiates a new SourcesAWSCAR object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourcesAWSCAR() *SourcesAWSCAR {
	this := SourcesAWSCAR{}
	return &this
}

// NewSourcesAWSCARWithDefaults instantiates a new SourcesAWSCAR object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourcesAWSCARWithDefaults() *SourcesAWSCAR {
	this := SourcesAWSCAR{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SourcesAWSCAR) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesAWSCAR) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SourcesAWSCAR) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SourcesAWSCAR) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SourcesAWSCAR) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesAWSCAR) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SourcesAWSCAR) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SourcesAWSCAR) SetType(v string) {
	o.Type = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *SourcesAWSCAR) GetExternalId() string {
	if o == nil || isNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesAWSCAR) GetExternalIdOk() (*string, bool) {
	if o == nil || isNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *SourcesAWSCAR) HasExternalId() bool {
	if o != nil && !isNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *SourcesAWSCAR) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *SourcesAWSCAR) GetRoleArn() string {
	if o == nil || isNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesAWSCAR) GetRoleArnOk() (*string, bool) {
	if o == nil || isNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *SourcesAWSCAR) HasRoleArn() bool {
	if o != nil && !isNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *SourcesAWSCAR) SetRoleArn(v string) {
	o.RoleArn = &v
}

func (o SourcesAWSCAR) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !isNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	return json.Marshal(toSerialize)
}

type NullableSourcesAWSCAR struct {
	value *SourcesAWSCAR
	isSet bool
}

func (v NullableSourcesAWSCAR) Get() *SourcesAWSCAR {
	return v.value
}

func (v *NullableSourcesAWSCAR) Set(val *SourcesAWSCAR) {
	v.value = val
	v.isSet = true
}

func (v NullableSourcesAWSCAR) IsSet() bool {
	return v.isSet
}

func (v *NullableSourcesAWSCAR) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourcesAWSCAR(val *SourcesAWSCAR) *NullableSourcesAWSCAR {
	return &NullableSourcesAWSCAR{value: val, isSet: true}
}

func (v NullableSourcesAWSCAR) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourcesAWSCAR) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Hava

Hava API

API version: 1.1.1
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// ReportIdExportBody struct for ReportIdExportBody
type ReportIdExportBody struct {
	// The format to export the report to
	ExportFormat string `json:"export_format"`
	// Toggle to show or hide the details in the findings section
	ExportOption *string `json:"export_option,omitempty"`
}

// NewReportIdExportBody instantiates a new ReportIdExportBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportIdExportBody(exportFormat string) *ReportIdExportBody {
	this := ReportIdExportBody{}
	this.ExportFormat = exportFormat
	return &this
}

// NewReportIdExportBodyWithDefaults instantiates a new ReportIdExportBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportIdExportBodyWithDefaults() *ReportIdExportBody {
	this := ReportIdExportBody{}
	return &this
}

// GetExportFormat returns the ExportFormat field value
func (o *ReportIdExportBody) GetExportFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExportFormat
}

// GetExportFormatOk returns a tuple with the ExportFormat field value
// and a boolean to check if the value has been set.
func (o *ReportIdExportBody) GetExportFormatOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExportFormat, true
}

// SetExportFormat sets field value
func (o *ReportIdExportBody) SetExportFormat(v string) {
	o.ExportFormat = v
}

// GetExportOption returns the ExportOption field value if set, zero value otherwise.
func (o *ReportIdExportBody) GetExportOption() string {
	if o == nil || isNil(o.ExportOption) {
		var ret string
		return ret
	}
	return *o.ExportOption
}

// GetExportOptionOk returns a tuple with the ExportOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportIdExportBody) GetExportOptionOk() (*string, bool) {
	if o == nil || isNil(o.ExportOption) {
		return nil, false
	}
	return o.ExportOption, true
}

// HasExportOption returns a boolean if a field has been set.
func (o *ReportIdExportBody) HasExportOption() bool {
	if o != nil && !isNil(o.ExportOption) {
		return true
	}

	return false
}

// SetExportOption gets a reference to the given string and assigns it to the ExportOption field.
func (o *ReportIdExportBody) SetExportOption(v string) {
	o.ExportOption = &v
}

func (o ReportIdExportBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["export_format"] = o.ExportFormat
	}
	if !isNil(o.ExportOption) {
		toSerialize["export_option"] = o.ExportOption
	}
	return json.Marshal(toSerialize)
}

type NullableReportIdExportBody struct {
	value *ReportIdExportBody
	isSet bool
}

func (v NullableReportIdExportBody) Get() *ReportIdExportBody {
	return v.value
}

func (v *NullableReportIdExportBody) Set(val *ReportIdExportBody) {
	v.value = val
	v.isSet = true
}

func (v NullableReportIdExportBody) IsSet() bool {
	return v.isSet
}

func (v *NullableReportIdExportBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportIdExportBody(val *ReportIdExportBody) *NullableReportIdExportBody {
	return &NullableReportIdExportBody{value: val, isSet: true}
}

func (v NullableReportIdExportBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportIdExportBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Hava

Hava API

API version: 1.1.2
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// EnvironmentSharesCreateRequest struct for EnvironmentSharesCreateRequest
type EnvironmentSharesCreateRequest struct {
	// The type of share to create
	Type *string `json:"type,omitempty"`
	Config *EnvironmentSharesCreateRequestConfig `json:"config,omitempty"`
}

// NewEnvironmentSharesCreateRequest instantiates a new EnvironmentSharesCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentSharesCreateRequest() *EnvironmentSharesCreateRequest {
	this := EnvironmentSharesCreateRequest{}
	return &this
}

// NewEnvironmentSharesCreateRequestWithDefaults instantiates a new EnvironmentSharesCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentSharesCreateRequestWithDefaults() *EnvironmentSharesCreateRequest {
	this := EnvironmentSharesCreateRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EnvironmentSharesCreateRequest) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSharesCreateRequest) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EnvironmentSharesCreateRequest) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EnvironmentSharesCreateRequest) SetType(v string) {
	o.Type = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *EnvironmentSharesCreateRequest) GetConfig() EnvironmentSharesCreateRequestConfig {
	if o == nil || isNil(o.Config) {
		var ret EnvironmentSharesCreateRequestConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSharesCreateRequest) GetConfigOk() (*EnvironmentSharesCreateRequestConfig, bool) {
	if o == nil || isNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *EnvironmentSharesCreateRequest) HasConfig() bool {
	if o != nil && !isNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given EnvironmentSharesCreateRequestConfig and assigns it to the Config field.
func (o *EnvironmentSharesCreateRequest) SetConfig(v EnvironmentSharesCreateRequestConfig) {
	o.Config = &v
}

func (o EnvironmentSharesCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentSharesCreateRequest struct {
	value *EnvironmentSharesCreateRequest
	isSet bool
}

func (v NullableEnvironmentSharesCreateRequest) Get() *EnvironmentSharesCreateRequest {
	return v.value
}

func (v *NullableEnvironmentSharesCreateRequest) Set(val *EnvironmentSharesCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentSharesCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentSharesCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentSharesCreateRequest(val *EnvironmentSharesCreateRequest) *NullableEnvironmentSharesCreateRequest {
	return &NullableEnvironmentSharesCreateRequest{value: val, isSet: true}
}

func (v NullableEnvironmentSharesCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentSharesCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



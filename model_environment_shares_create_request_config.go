/*
Hava

Hava API

API version: 1.1.2
Contact: support@hava.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package havaclient

import (
	"encoding/json"
)

// EnvironmentSharesCreateRequestConfig Configuration for the generated view. Only used for PNG
type EnvironmentSharesCreateRequestConfig struct {
	// Display connections on the exported diagram
	Connections *bool `json:"connections,omitempty"`
	// Display diagram in isometric view
	Isometric *bool `json:"isometric,omitempty"`
	// Display labels such as names on the diagram
	Labels *bool `json:"labels,omitempty"`
}

// NewEnvironmentSharesCreateRequestConfig instantiates a new EnvironmentSharesCreateRequestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentSharesCreateRequestConfig() *EnvironmentSharesCreateRequestConfig {
	this := EnvironmentSharesCreateRequestConfig{}
	return &this
}

// NewEnvironmentSharesCreateRequestConfigWithDefaults instantiates a new EnvironmentSharesCreateRequestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentSharesCreateRequestConfigWithDefaults() *EnvironmentSharesCreateRequestConfig {
	this := EnvironmentSharesCreateRequestConfig{}
	return &this
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *EnvironmentSharesCreateRequestConfig) GetConnections() bool {
	if o == nil || isNil(o.Connections) {
		var ret bool
		return ret
	}
	return *o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSharesCreateRequestConfig) GetConnectionsOk() (*bool, bool) {
	if o == nil || isNil(o.Connections) {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *EnvironmentSharesCreateRequestConfig) HasConnections() bool {
	if o != nil && !isNil(o.Connections) {
		return true
	}

	return false
}

// SetConnections gets a reference to the given bool and assigns it to the Connections field.
func (o *EnvironmentSharesCreateRequestConfig) SetConnections(v bool) {
	o.Connections = &v
}

// GetIsometric returns the Isometric field value if set, zero value otherwise.
func (o *EnvironmentSharesCreateRequestConfig) GetIsometric() bool {
	if o == nil || isNil(o.Isometric) {
		var ret bool
		return ret
	}
	return *o.Isometric
}

// GetIsometricOk returns a tuple with the Isometric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSharesCreateRequestConfig) GetIsometricOk() (*bool, bool) {
	if o == nil || isNil(o.Isometric) {
		return nil, false
	}
	return o.Isometric, true
}

// HasIsometric returns a boolean if a field has been set.
func (o *EnvironmentSharesCreateRequestConfig) HasIsometric() bool {
	if o != nil && !isNil(o.Isometric) {
		return true
	}

	return false
}

// SetIsometric gets a reference to the given bool and assigns it to the Isometric field.
func (o *EnvironmentSharesCreateRequestConfig) SetIsometric(v bool) {
	o.Isometric = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *EnvironmentSharesCreateRequestConfig) GetLabels() bool {
	if o == nil || isNil(o.Labels) {
		var ret bool
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSharesCreateRequestConfig) GetLabelsOk() (*bool, bool) {
	if o == nil || isNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *EnvironmentSharesCreateRequestConfig) HasLabels() bool {
	if o != nil && !isNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given bool and assigns it to the Labels field.
func (o *EnvironmentSharesCreateRequestConfig) SetLabels(v bool) {
	o.Labels = &v
}

func (o EnvironmentSharesCreateRequestConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Connections) {
		toSerialize["connections"] = o.Connections
	}
	if !isNil(o.Isometric) {
		toSerialize["isometric"] = o.Isometric
	}
	if !isNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentSharesCreateRequestConfig struct {
	value *EnvironmentSharesCreateRequestConfig
	isSet bool
}

func (v NullableEnvironmentSharesCreateRequestConfig) Get() *EnvironmentSharesCreateRequestConfig {
	return v.value
}

func (v *NullableEnvironmentSharesCreateRequestConfig) Set(val *EnvironmentSharesCreateRequestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentSharesCreateRequestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentSharesCreateRequestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentSharesCreateRequestConfig(val *EnvironmentSharesCreateRequestConfig) *NullableEnvironmentSharesCreateRequestConfig {
	return &NullableEnvironmentSharesCreateRequestConfig{value: val, isSet: true}
}

func (v NullableEnvironmentSharesCreateRequestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentSharesCreateRequestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


